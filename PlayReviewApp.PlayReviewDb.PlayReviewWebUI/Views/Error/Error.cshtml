@model ErrorViewModel

<div class="text-center text-danger my-5">
    <h3 class="display-3">
        <i class="fa fa-solid fa-bug-slash"> </i>
        <br>
    </h3>

    <h1>@Model.StatusCode</h1>
    <p>@Model.RequestId</p>

    <div>
        @switch (Model.StatusCode)
        {
            case 400:
                <h2>Bad Request</h2>
                <p>The request could not be understood or was missing required parameters.</p>
                break;
            case 401:
                <h2>Unauthorized</h2>
                <p>You need to authenticate to access this resource.</p>
                break;
            case 403:
                <h2>Forbidden</h2>
                <p>You do not have permission to access this resource.</p>
                break;
            case 404:
                <h2>Page Not Found</h2>
                <p>The page you are looking for could not be found.</p>
                break;
            case 405:
                <h2>Method Not Allowed</h2>
                <p>The HTTP method used is not allowed for this resource.</p>
                break;
            case 406:
                <h2>Not Acceptable</h2>
                <p>The resource is not capable of generating content acceptable according to the Accept headers sent in the request.</p>
                break;
            case 407:
                <h2>Proxy Authentication Required</h2>
                <p>Authentication with a proxy server is required.</p>
                break;
            case 408:
                <h2>Request Timeout</h2>
                <p>The server timed out waiting for the request.</p>
                break;
            case 409:
                <h2>Conflict</h2>
                <p>The request could not be completed due to a conflict with the current state of the target resource.</p>
                break;
            case 410:
                <h2>Gone</h2>
                <p>The resource requested is no longer available and will not be available again.</p>
                break;
            case 411:
                <h2>Length Required</h2>
                <p>The request did not specify the length of its content, which is required by the resource.</p>
                break;
            case 412:
                <h2>Precondition Failed</h2>
                <p>The server does not meet one of the preconditions specified by the client in the request.</p>
                break;
            case 413:
                <h2>Payload Too Large</h2>
                <p>The request is larger than the server is willing or able to process.</p>
                break;
            case 414:
                <h2>URI Too Long</h2>
                <p>The URI provided was too long for the server to process.</p>
                break;
            case 415:
                <h2>Unsupported Media Type</h2>
                <p>The request entity has a media type which the server or resource does not support.</p>
                break;
            case 416:
                <h2>Range Not Satisfiable</h2>
                <p>The client has asked for a portion of the file, but the server cannot supply that portion.</p>
                break;
            case 417:
                <h2>Expectation Failed</h2>
                <p>The server cannot meet the requirements of the Expect request-header field.</p>
                break;
            case 418:
                <h2>I'm a teapot</h2>
                <p>This is an April Fools' joke from RFC 2324. The teapot refuses to brew coffee because it is a teapot.</p>
                break;
            case 419:
                <h2>Authentication Timeout</h2>
                <p>Your session has expired. Please log in again.</p>
                break;
            case 420:
                <h2>Enhance Your Calm</h2>
                <p>You are being rate-limited due to sending too many requests in a short amount of time.</p>
                break;
            case 421:
                <h2>Misdirected Request</h2>
                <p>The request was directed to a server that is not able to produce a response.</p>
                break;
            case 422:
                <h2>Unprocessable Entity</h2>
                <p>The request was well-formed, but the server was unable to process it due to semantic errors.</p>
                break;
            case 423:
                <h2>Locked</h2>
                <p>The resource that is being accessed is locked.</p>
                break;
            case 424:
                <h2>Failed Dependency</h2>
                <p>The request failed due to failure of a previous request.</p>
                break;
            case 425:
                <h2>Too Early</h2>
                <p>The server is unwilling to risk processing a request that might be replayed.</p>
                break;
            case 426:
                <h2>Upgrade Required</h2>
                <p>The client should switch to a different protocol as indicated by the server.</p>
                break;
            case 427:
                <h2>Unassigned</h2>
                <p>Reserved for future use.</p>
                break;
            case 428:
                <h2>Precondition Required</h2>
                <p>The server requires the request to be conditional.</p>
                break;
            case 429:
                <h2>Too Many Requests</h2>
                <p>You have sent too many requests in a given amount of time.</p>
                break;
            case 431:
                <h2>Request Header Fields Too Large</h2>
                <p>The request is too large for the server to handle due to the size of the headers.</p>
                break;
            case 451:
                <h2>Unavailable For Legal Reasons</h2>
                <p>The resource is unavailable due to legal restrictions.</p>
                break;
            case 500:
                <h2>Internal Server Error</h2>
                <p>An unexpected error occurred on the server.</p>
                break;
            case 501:
                <h2>Not Implemented</h2>
                <p>The server does not support the functionality required to fulfill the request.</p>
                break;
            case 502:
                <h2>Bad Gateway</h2>
                <p>The server received an invalid response from the upstream server.</p>
                break;
            case 503:
                <h2>Service Unavailable</h2>
                <p>The server is currently unable to handle the request due to temporary overloading or maintenance.</p>
                break;
            case 504:
                <h2>Gateway Timeout</h2>
                <p>The server did not receive a timely response from the upstream server or some other auxiliary server it needed to access.</p>
                break;
            default:
                <h2>Error</h2>
                <p>An unexpected error occurred.</p>
                break;
        }
    </div>
</div>

@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code> <!-- Hata ID'si -->
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>
